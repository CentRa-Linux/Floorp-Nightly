# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# Please write our copyright if you use this file.

name: Daily Build with Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * *'

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
permissions:
  actions: write
  checks: write
  contents: write

jobs:
  windows-x86-64-build-with-enable-profile-generate:
    if: (github.event_name == 'schedule' && github.repository_owner == 'surapunoyousei') || (github.event_name != 'schedule')

    name: Windows x86_64 Build with --enable-profile-generate

    runs-on: ${{ matrix.runs-on }}
    permissions: write-all
    strategy:
      matrix:
        runs-on: ['ubuntu-22.04']

    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    - name: Setup Disk & Swap Space 💿
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc

        sudo fallocate -l 10G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2

        echo
        echo

        echo After:
        free -h
        df -h

    - uses: actions/checkout@v3
      name: Clone 🧬
    
    - name: Set Display Version
      run: |
        export DATE=`date +%Y%m%d`
        echo $DATE > browser/config/version_display.txt

    - name: Setup 🪛
      run: |
        mkdir -p $RUNNER_USERDIR/win-cross

        cp ./.github/mozconfig_win_pgo_base mozconfig
        echo 'ac_add_options --with-branding=browser/branding/beta' >> mozconfig
        echo 'ac_add_options --enable-profile-generate=cross' >> mozconfig
        sudo apt update
        sudo apt install zstd p7zip-full

        echo Setup wine
        aria2c "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-1.toolchains.v3.linux64-wine.latest/artifacts/public%2Fbuild%2Fwine.tar.zst" -o wine.tar.zst
        tar --zstd -xvf wine.tar.zst -C $RUNNER_USERDIR/win-cross
        rm wine.tar.zst

        echo Replace rustc
        aria2c "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-3.toolchains.v3.linux64-rust-windows-1.68.latest/artifacts/public%2Fbuild%2Frustc.tar.zst" -o rustc.tar.zst
        tar --zstd -xvf rustc.tar.zst -C $RUNNER_USERDIR/win-cross
        echo 'export RUSTC="$RUNNER_USERDIR/win-cross/rustc/bin/rustc"' >> mozconfig
        
        echo Setup Visual Studio
        sudo apt install -y msitools python3-pip
        ./mach python --virtualenv build build/vs/pack_vs.py -o $RUNNER_USERDIR/win-cross/vs2017.tar.zst build/vs/vs2017.yaml
        tar --zstd -xvf $RUNNER_USERDIR/win-cross/vs2017.tar.zst -C $RUNNER_USERDIR/win-cross
        rm $RUNNER_USERDIR/win-cross/vs2017.tar.zst
        chmod -R +x "$RUNNER_USERDIR/win-cross/vs2017"

        ./mach --no-interactive bootstrap --application-choice browser
        echo "export LIB=\"$(cd $RUNNER_USERDIR/.mozbuild/clang/lib/clang/* && cd lib/windows && pwd)\"" >> mozconfig
        $RUNNER_USERDIR/.cargo/bin/rustup target add x86_64-pc-windows-msvc

        export DISPLAY_VERSION=`cat browser/config/version_display.txt`
        export UPDATE_CHANNEL="release"
        echo "DISPLAY_VERSION=$DISPLAY_VERSION" >> $GITHUB_ENV
        echo "UPDATE_CHANNEL=$UPDATE_CHANNEL" >> $GITHUB_ENV

    - name: Change update url
      run: |
        sed -i -e "s/URL=https:\/\/@MOZ_APPUPDATE_HOST@\/update\/6\/%PRODUCT%\/%VERSION%\/%BUILD_ID%\/%BUILD_TARGET%\/%LOCALE%\/%CHANNEL%\/%OS_VERSION%\/%SYSTEM_CAPABILITIES%\/%DISTRIBUTION%\/%DISTRIBUTION_VERSION%\/update\.xml/https:\/\/github\.com\/Floorp-Projects\/Floorp-Nightly\/releases\/download\/BETA\/update\.xml/g" ./build/application.ini.in

    - name: Build 🔨
      run: |
        ./mach build

    - name: Package 📦
      run: |
        ./mach package

    - name: Copy 📂
      run: |
        mkdir $RUNNER_USERDIR/output
        cp -r obj-x86_64-pc-mingw32/dist/floorp $RUNNER_USERDIR/output/

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-x86_64-devel-build-with-enable-profile-generate
        path: ${{ env.RUNNER_USERDIR }}/output

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE

  windows-x86-64-generate-profdata-and-jarlog:
    if: (github.event_name == 'schedule' && github.repository_owner == 'Floorp-Projects') || (github.event_name != 'schedule')

    name: Windows x86_64 Generate profdata and jarlog

    needs: windows-x86-64-build-with-enable-profile-generate
    runs-on: windows-2022
    
    steps:
    - uses: actions/download-artifact@v3
      name: Download artifact 📥
      with:
        name: floorp-windows-x86_64-devel-build-with-enable-profile-generate
        path: C:\artifact
    
    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Setup 🪛
      run: |
        (New-Object System.Net.WebClient).DownloadFile("https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe","C:\MozillaBuildSetup-Latest.exe")
        C:\MozillaBuildSetup-Latest.exe /S | out-null
    
    - name: Generate 🔄
      run: |
        $workspace_dir = [regex]::replace($env:GITHUB_WORKSPACE, "^([A-Z]):", { "/" + $args.value.Substring(0, 1).toLower() }) -replace "\\","/"

        echo "cd $workspace_dir" '' >> mozilla-build-run.sh
        echo 'export PATH=/c/mozilla-build/msys2/usr/bin:$PATH' '' >> mozilla-build-run.sh
        echo './mach --no-interactive bootstrap --application-choice browser' '' >> mozilla-build-run.sh
        echo 'LLVM_PROFDATA=/c/Users/runneradmin/.mozbuild/clang/bin/llvm-profdata.exe JARLOG_FILE=en-US.log ./mach python build/pgo/profileserver.py --binary /c/artifact/floorp/floorp.exe' '' >> mozilla-build-run.sh
        C:\mozilla-build\start-shell.bat $workspace_dir\mozilla-build-run.sh
        
    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-x86_64-devel-profdata-and-jarlog
        path: |
          merged.profdata
          en-US.log

  windows-x86-64-build-with-profdata-and-jarlog:
    if: (github.event_name == 'schedule' && github.repository_owner == 'Floorp-Projects') || (github.event_name != 'schedule')

    name: Windows x86_64 Build with profdata and jarlog

    needs: windows-x86-64-generate-profdata-and-jarlog
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: ['ubuntu-22.04']

    steps:
    - name: Init
      run: |
        export RUNNER_USERDIR=`echo ~`
        echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE

    - name: Change PPA mirror servers
      run: |
        sudo perl -p -i -e 's%(deb(?:-src|)\s+)https?://(?!archive\.canonical\.com|security\.ubuntu\.com)[^\s]+%$1http://archive.ubuntu.com/ubuntu/%' /etc/apt/sources.list
        sudo apt update

    - name: Setup Disk & Swap Space 💿
      if: matrix.runs-on == 'ubuntu-22.04'
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 10G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc

        sudo fallocate -l 10G /home/runner/swapfile2
        sudo chmod 600 /home/runner/swapfile2
        sudo mkswap /home/runner/swapfile2
        sudo swapon /home/runner/swapfile2

        echo
        echo

        echo After:
        free -h
        df -h

    - uses: actions/download-artifact@v3
      name: Download artifact 📥
      with:
        name: floorp-windows-x86_64-devel-profdata-and-jarlog
        path: ${{ env.RUNNER_USERDIR }}/artifact

    - uses: actions/checkout@v3
      name: Clone 🧬

    - name: Clone l10n-central 🧬
      run: |
        git clone --depth 1 https://github.com/Floorp-Projects/l10n-central.git $RUNNER_USERDIR/l10n-central
       
    - name: Set Display Version
      run: |
        export DATE=`date +%Y%m%d`
        echo $DATE > browser/config/version_display.txt
  
    - name: Setup 🪛
      run: |
        mkdir -p $RUNNER_USERDIR/win-cross

        cp ./.github/mozconfig_win_pgo_base mozconfig
        echo 'ac_add_options --with-branding=browser/branding/beta' >> mozconfig
        echo 'ac_add_options --with-l10n-base=$RUNNER_USERDIR/l10n-central/l10n-central' >> mozconfig
        echo 'ac_add_options --enable-profile-use=cross' >> mozconfig
        echo 'ac_add_options --with-pgo-profile-path=$RUNNER_USERDIR/artifact/merged.profdata' >> mozconfig
        echo 'ac_add_options --with-pgo-jarlog=$RUNNER_USERDIR/artifact/en-US.log' >> mozconfig
        sudo apt update
        sudo apt install zstd p7zip-full

        echo Setup wine
        aria2c "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-1.toolchains.v3.linux64-wine.latest/artifacts/public%2Fbuild%2Fwine.tar.zst" -o wine.tar.zst
        tar --zstd -xvf wine.tar.zst -C $RUNNER_USERDIR/win-cross
        rm wine.tar.zst

        echo Replace rustc
        aria2c "https://firefox-ci-tc.services.mozilla.com/api/index/v1/task/gecko.cache.level-3.toolchains.v3.linux64-rust-windows-1.68.latest/artifacts/public%2Fbuild%2Frustc.tar.zst" -o rustc.tar.zst
        tar --zstd -xvf rustc.tar.zst -C $RUNNER_USERDIR/win-cross
        echo 'export RUSTC="$RUNNER_USERDIR/win-cross/rustc/bin/rustc"' >> mozconfig

        echo Setup Visual Studio
        sudo apt install -y msitools python3-pip
        ./mach python --virtualenv build build/vs/pack_vs.py -o $RUNNER_USERDIR/win-cross/vs2017.tar.zst build/vs/vs2017.yaml
        tar --zstd -xvf $RUNNER_USERDIR/win-cross/vs2017.tar.zst -C $RUNNER_USERDIR/win-cross
        rm $RUNNER_USERDIR/win-cross/vs2017.tar.zst
        chmod -R +x "$RUNNER_USERDIR/win-cross/vs2017"

        ./mach --no-interactive bootstrap --application-choice browser
        echo "export LIB=\"$(cd $RUNNER_USERDIR/.mozbuild/clang/lib/clang/* && cd lib/windows && pwd)\"" >> mozconfig
        $RUNNER_USERDIR/.cargo/bin/rustup target add x86_64-pc-windows-msvc

        export DISPLAY_VERSION=`cat browser/config/version_display.txt`
        export UPDATE_CHANNEL="release"
        echo "DISPLAY_VERSION=$DISPLAY_VERSION" >> $GITHUB_ENV
        echo "UPDATE_CHANNEL=$UPDATE_CHANNEL" >> $GITHUB_ENV

    - name: Change update url
      run: |
        sed -i -e "s/URL=https:\/\/@MOZ_APPUPDATE_HOST@\/update\/6\/%PRODUCT%\/%VERSION%\/%BUILD_ID%\/%BUILD_TARGET%\/%LOCALE%\/%CHANNEL%\/%OS_VERSION%\/%SYSTEM_CAPABILITIES%\/%DISTRIBUTION%\/%DISTRIBUTION_VERSION%\/update\.xml/https:\/\/github\.com\/Floorp-Projects\/Floorp-Nightly\/releases\/download\/BETA\/update\.xml/g" ./build/application.ini.in

    - name: Copy l10n files
      run: |
        for dir in $(ls -l $RUNNER_USERDIR/l10n-central/l10n-central | grep ^d | awk '{print $9}'); do
          mkdir -p $RUNNER_USERDIR/l10n-central/l10n-central/$dir/browser/branding/beta
          cp ./browser/branding/beta/locales/en-US/brand.dtd $RUNNER_USERDIR/l10n-central/l10n-central/$dir/browser/branding/beta/brand.dtd
          cp ./browser/branding/beta/locales/en-US/brand.ftl $RUNNER_USERDIR/l10n-central/l10n-central/$dir/browser/branding/beta/brand.ftl
          cp ./browser/branding/beta/locales/en-US/brand.properties $RUNNER_USERDIR/l10n-central/l10n-central/$dir/browser/branding/beta/brand.properties
        done

    - name: Build 🔨
      run: |
        ./mach build

    - name: Package 📦
      run: |
        ./mach package
        ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ja-KA ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

    - name: Delete BETA tag & release 🗑️
      continue-on-error: true
      id: delete_tag_release_execution
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
         git pull --tags -f
         gh release delete BETA -y
         git push --delete -f origin BETA
         git tag -d BETA

    - name: Error handling
      continue-on-error: true
      if: ${{ steps.delete_tag_release_execution.outcome == 'failure' }}
      run: |
         git push --delete -f origin BETA
         git tag -d BETA

    - name: Create MAR FILE 📦
      run: |
        touch "obj-x86_64-pc-mingw32/dist/floorp/precomplete"
        floorp_ver=$(cat browser/config/version.txt)
        floorp_cat_ver=$(echo $floorp_ver | rev | cut -c 1-2 | rev)
        floorp_disp_ver=$(cat browser/config/version_display.txt)

        MAR="obj-x86_64-pc-mingw32/dist/host/bin/mar" MOZ_PRODUCT_VERSION=11.0.0 MAR_CHANNEL_ID=beta ./tools/update-packaging/make_full_update.sh ./obj-x86_64-pc-mingw32/dist "obj-x86_64-pc-mingw32/dist/floorp"

        floorp_build_id=$(cat obj-x86_64-pc-mingw32/dist/floorp-${floorp_ver}.en-US.win64.txt)
        floorp_mar_size=$(wc -c  < obj-x86_64-pc-mingw32/dist/output.mar)
        if [ "${floorp_cat_ver}" = ".0" ];then
          floorp_ver=$(echo $floorp_ver | rev | cut -c 3- | rev)
        fi

        echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" >> obj-x86_64-pc-mingw32/dist/update.xml
        echo "<updates>" >> obj-x86_64-pc-mingw32/dist/update.xml
        echo "    <update type=\"minor\" displayVersion=\"${floorp_disp_ver}\" appVersion=\"${floorp_ver}\" platformVersion=\"${floorp_ver}\" buildID=\"${floorp_build_id}\" detailsURL=\"https://blog.ablaze.one/category/ablaze/ablaze-project/floorp/\">" >> obj-x86_64-pc-mingw32/dist/update.xml
        echo "        <patch type=\"complete\" URL=\"https://github.com/Floorp-Projects/Floorp-Nightly/releases/download/BETA/update.mar\" size=\"${floorp_mar_size}\"/>" >> obj-x86_64-pc-mingw32/dist/update.xml
        echo "    </update>" >> obj-x86_64-pc-mingw32/dist/update.xml
        echo "</updates>" >> obj-x86_64-pc-mingw32/dist/update.xml

    - name: Copy 📂
      run: |
        mkdir $RUNNER_USERDIR/output
        cp obj-x86_64-pc-mingw32/dist/install/sea/floorp-*.en-US.win64.installer.exe $RUNNER_USERDIR/output/floorp-win64.installer.exe
        cp obj-x86_64-pc-mingw32/dist/floorp-*.en-US.win64.zip $RUNNER_USERDIR/output/floorp-win64.zip
        cp obj-x86_64-pc-mingw32/dist/output.mar $RUNNER_USERDIR/output/update.mar
        cp obj-x86_64-pc-mingw32/dist/update.xml $RUNNER_USERDIR/output/update.xml
    
    - name: Create BETA tag 🏷️
      continue-on-error: true
      env:
       GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
         git tag BETA
         git push -f origin BETA

    - name: Get a current date 
      run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: BETA
        prerelease: true
        title: "Floorp development build DATE: ${{ env.NOW }}"
        files: |
          ${{ env.RUNNER_USERDIR }}/output/update.xml
          ${{ env.RUNNER_USERDIR }}/output/update.mar
          ${{ env.RUNNER_USERDIR }}/output/floorp-win64.zip
          ${{ env.RUNNER_USERDIR }}/output/floorp-win64.installer.exe

    - name: Publish 🎁
      uses: actions/upload-artifact@master
      with:
        name: floorp-windows-x86_64-devel-package-build-with-profdata-and-jarlog
        path: ${{ env.RUNNER_USERDIR }}/output

    - name: Clean up (Self-hosted only)
      if: contains(matrix.runs-on, 'self-hosted')
      run: |
        rm -rf $RUNNER_USERDIR/output
        rm -rf $RUNNER_USERDIR/win-crosstool
        rm -rf $RUNNER_USERDIR/.mozbuild
        rm -rf $RUNNER_USERDIR/.cargo
        rm -rf $RUNNER_USERDIR/l10n-central
        rm -rf $GITHUB_WORKSPACE
        mkdir $GITHUB_WORKSPACE
